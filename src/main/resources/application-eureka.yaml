
server:
  port: 8990
  servlet:
    context-path: /
spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      default-filters:
        - name: CircuitBreaker
          args:
            name: myCircuitBreaker
            fallbackUri: forward:/fallback
        - name: RequestRateLimiter
          args:
            # 使用SpEL名称引用Bean，与上面新建的RateLimiterConfig类中的bean的name相同
            key-resolver: '#{@pathKeyResolver}'
            # 令牌桶每秒填充平均速率
            redis-rate-limiter.replenishRate: 2
            # 令牌桶最大容量
            redis-rate-limiter.burstCapacity: 10
      #default-time: 4
      discovery:
        locator:
          enabled: true   #开启Eureka服务发现
          lower-case-service-id: true
#      routes:
#        - id: seckill-provider-route
#          order: -1
#          uri: lb://eureka-client
#          predicates:
#            - Path=/eureka-client/timeout/**
#          filters:
#            - StripPrefix=1
#            - name: CircuitBreaker
#              args:
#                name: slow
#                fallbackUri: forward:/fallback

#    globalcors:
#      cors-configurations:
#        '[/**]':
#          allowed-origins: "*"
#          allowed-headers: "*"
#          allow-credentials: true
#          allowed-methods:
#            - GET
#            - POST
#            - DELETE
#            - PUT
#            - OPTION
  redis:
    host: 10.110.227.58
    port: 36039
    # 密码
    password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 180
        # 连接池的最大数据库连接数
        max-active: -1
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: 6000ms
eureka:
  client:
    service-url:
      defaultZone: http://localhost:1001/eureka/ #Eureka Server地址
  instance:
    prefer-ip-address: true

logging:
  level:
    org.springframework.cloud.gateway: debug


